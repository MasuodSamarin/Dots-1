snippet _split "Example Snippet" b
vector<string> split(string& s, string delim)
{
    vector<string> arr;
    size_t f = 0;
    size_t x;
    while ( (x = s.find(delim, f)) != string::npos) {
        arr.push_back(s.substr(f, x-f));
        f = x + delim.length();
    }
    arr.push_back(s.substr(f, s.length()));
    return arr;
}
$1
endsnippet

snippet _csplit "Character Wise Splitting" b
vector<string> split(string& s, char delim)
{
    vector<string> arr;
    // size_t f = s.find(delim);
    size_t f = 0;
    size_t x;
    while ( (x = s.find(delim, f)) != string::npos) {
        arr.push_back(s.substr(f, x-f));
        f = x+1;
    }
    arr.push_back(s.substr(f, s.length()));
    return arr;
}
$1
endsnippet

snippet _join "Character Wise Split" b
template <typename T>
string join(vector<T>& arr, char delim)
{
    ostringstream result;
    result << arr[0];
    for (int i=1; i < arr.size(); i++)
        result << delim << arr[i];
    return result.str();
}
$1
endsnippet

snippet _isPrime "Method that checks whether a number is prime or not" b
bool isPrime(int64_t x)
{
    if (x <= 1)
        return false;

    for (int64_t i=2; i <= sqrt(x); i++)
        if (x % i == 0)
            return false;

    return true;
}
endsnippet
